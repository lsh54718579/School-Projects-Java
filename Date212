/**
 * Date212 Class has a constructor that takes a string variable and extracts the year, month
 * and year from that string. The class has a compareTo method that will be called in another 
 * class to compare the size of two dates. It also has a toString method that converts the int date back to a string.  
 * @author Sihang Li
 *
 */
public class Date212 {
	private int day, month, year;
	public Date212 (String s) {
		year=Integer.parseInt(s.substring(0,4));	//Substring method's beginindex is inclusive
		month=Integer.parseInt(s.substring(4, 6));	//Endindex is exclusive 
		day=Integer.parseInt(s.substring(6, 8));	//Endindex is exclusive 
		if (s.length()<8)
			throw new Date212Exception ("The date "+s+" is invalid because it contains less than 8 digits.");
		else if (s.length()>8)
			throw new Date212Exception ("The date "+s+" is invalid because it contains more than 8 digits.");
		if (month>12 || month<1)
			throw new Date212Exception("The date "+s+" is invalid beacsue it contains month "+month +", which is not one of the twelve months.");
		if (month==1 || month==3 || month==5 || month==7 || month==8 || month==10 || month==12)
			if (day>31)
				throw new Date212Exception("The month "+ month+" does not have day "+ day+".\n");
		else if (month==2 || month==4 || month==6 || month==9 || month==11)
			if (day>30)
				throw new Date212Exception("The month "+ month+" does not have day "+ day+".\n");
	}// constructor 
	void setYear(int newYear) {
		year=newYear;
	} //setter method
	void setMonth(int newMonth) {
		month=newMonth;
	}
	void setDay(int newDay) {
		day=newDay;
	}
	
	int getYear() {
		return this.year;
	}//getter method
	
	int getMonth() {
		return this.month;
	}
	int getDay() {
		return this.day;
	}
	/**
	 * Being called from class FileMenuHandler and compares the dates in the linked list.  
	 * @param date2
	 * @return returns three possibilities. 
	 */
	public int compareTo (Date212 date2) {
		if (this.year<date2.year)
			return -1;
		else if (this.year>date2.year)
			return 1;
		else {
			if (this.month<date2.month)
				return -1;
			else if (this.month>date2.month)
				return 1;
			else {
				if (this.day<date2.day)
					return -1;
				else if (this.day>date2.day)
					return 1;
				else 
					return 0;
			}			
		}
	}
	/**
	 * Converts dates of type int to dates of type string. 
	 * @return the date in the required format. 
	 */
	public String toString () {
		String monthInEng=new String();
		if (month==1)
			monthInEng="January";
		else if (month==2)
			monthInEng="Feburary";
		else if (month==3)
			monthInEng="March";
		else if (month==4)
			monthInEng="April";
		else if (month==5)
			monthInEng="May";
		else if (month==6)	
			monthInEng="June";
		else if (month==7)
			monthInEng="July";
		else if (month==8)
			monthInEng="August";
		else if (month==9)
			monthInEng="September";
		else if (month==10)
			monthInEng="October";
		else if (month==11)
			monthInEng="November";
		else if (month==12)
			monthInEng="December";
		
		return monthInEng+" "+day+", "+year;
	}

}
